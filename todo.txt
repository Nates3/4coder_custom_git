
/////////////////////////////
------------BAD BUGS-------------

Not Empty :(

[ ] - Bug: Comment blocks aren't auto indented correctly, when you enable virtual whitespace they look          fine but if you open the file in an external program like visual studio or remedy, all the stuff
      in between each end of the comment block will have no indentation and will start at the left
      most pixel

[ ] - Bug: on code_index_note macros, sometimes you won't be able jump to the macro, in lister
      view you can, but using "jump_to_definition_at_cursor" it won't work

[ ] - Bug?: When you load a project, and then load another project, everything from the previous project
      isn't unloaded. Should we fix this so that's the case?

/////////////////////////////
---------- TODOS -------------
[ ] - When in selection Mode, paste or "vim_paste" should copy the selection into the clipboard
      delete the selection and paste what is currently in the clipboard over the selection.

[ ] - Sometimes while in "Command Mode" they keybinds change to "Insert Mode",
      switching Views back and fourth fixed this issue. But it shouldn't happen in the 
      first place.

[ ] - Project manager, stores strings to all project.4coder files that you want, 
      and maybe stores a lister name, then you write some CUSTOM_COMMAND_SIG called, projects
      and that lists every single project you can load
  [ ] - When opening a project, 4coder did save the open buffers and where the cursor was

[ ] - Polish the file lister so that it's sorted and that it stores most recent position into the file

[ ] - Add more "CodeIndexNote_Types" for syntax highlighting
  [x] - Add CodeIndexNote_Forward_Declarition type
	[x] - Add CodeIndexNote_Enum Type
  [x] - Add CodeIndexNote_CommentTODO type
	[x] - Add CodeIndexNote_CommentNOTE type
	[ ] - Add CodeIndexNote_Union type
	[ ] - Add CodeIndexNote_Global_Variable type
	[ ] - Add CodeIndexNote_Operator_Type for syntax hilighting *+-=\%#!~&

[ ] - CodeIndexNote_Comment only highlights the TODO / NOTE

[ ] - Add functionality for jump_to_definition to note the function params for overloaded functions

[ ] - Implement render text that's above / on line ScopeBegin 
			at the matching ScopeClose
			i.e.
			this_is_some_function_name(u32 index, u32 index2)
			{ 
				// function body
			} Render this -> (this_is_some_function_name(u32 index, u32 index2))

/////////////////////////////////////////////
------- FINISHED TODOS / FIXED BUGS ---------
[x] - Yanking a full line (Shift + Y) and then pasting that line should create a new line(always)
      and then paste the contents, even if the cursor is in the middle of the line

[x] - Add functionality to change syntax coloring using theme-name.4coder file

[x] - Bug: slowdown of listers because for some reason, the more items are in a list
      the more the (threads sleep)? when asking for next user input from multi threads.
      look at run_lister() -> get_next_input() -> get_next_input_raw() -> coroutine_yield() for more info
      (fixed) -> lister_render was sending as many draw calls as the _entire_ lister count which in 
      the 4coder project it was 8000, I made it so it only sends draw calls for the ones you can see

[x] - Forward Declarations hilighted white, but overrided to red if definition is found

[x] - Add functionality for CodeIndexNote_Forward_Declaration to include structs / enums

[x] - Bug: When opening a lister panel you can't execute any other cammands as if the
			leave_event_unhandled() function wasn't invoked. 

[x] - Bug: Mark history is stored in the View and isn't associated with every individual buffer
      fix it so marks are stored with every buffer and you can change the buffer on your view panel
      without loosing your marks on the previous buffer you were working on

[x] - Have setting to sync states between views so that when you switch panels, you're view state gets
      carried over so it's only if you ever had one mode across all panels

[x] - Implement Shift + V selection in visual mode
  [x] - Set markStart, markEnd
				could store as line_num_begin, line_num_end
				then if you're in select_line_mode, commands like copy / cut
				could change behavior
  [x] - draw_rectangle for every line between markStart and markEnd

[x] - Bug: If you press enter in the messages panel the program just crashes??

[x] - ? Find the code that is used by all things that change
			the active view, and insert set_modal and record_mark functions there

[x] - Jumping to definition changes the Keybinds somehow? Vim command -> jump -> 
      Insert, can't change back to Command again (Bug)
      (fixed) -> "can't change back again" was due to the view being in command mode
      but the buffer associated with the view was in insert mode, there's an if check in
      the "change_to_mode" signatures that prevented you from switching back.
      Changed a few api functions to ensure that the correct map is set based on the view->state
      changed_places -> "view_set_file", "view_set_active", and in 4ed.cpp where mouse_panel is set as the active_panel

[x] - Bug: BIG SLOWDOWN on large text files??? Made a completely new 4ed source build
      with no custom code, and the performance is out the window. We are wasting a lot of work every 
      frame
      (slowdown was because we were looping over _all_ tokens in the _entire_ file and _not_
      the visible range of the view "camera")

[X] - Implement a mark history system that records marks

[x] - Make there keymaps (keybind groups): "shared_bindings", "command_mode_bindings", "text_input_mode"

[x] - Syntax Highlighting for identifiers (it already had a basic implementation!)
			Need to figure out how to assign types to identifiers based on some context
			#define Identifier should be type macro for instance
			then need to figure out how to compare identifiers and render text using identifier color

[x] - Bug: Margin Border green indicating text mode sometimes renders even though
			command mode is enabled

[x] - Bug: When switching view buffers using ctr + i/o, 
			their keymaps need to be updated depending on the mode

[x] - Add a lister for CodeIndexNote_Types
			i.e. list all functions, list all TODOS, list all NOTES, list all MACROS, etc..

[x] - Bug?: When you open a new file it sets text mode 
  		see custom\4coder_default_hooks.cpp -> default_begin_buffer
			we should probably only do this on startup

